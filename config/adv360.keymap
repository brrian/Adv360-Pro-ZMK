/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NUMBERS 2
#define MOD 3
#define HYPER LS(LC(LA(LGUI)))

/ {
    behaviors {
        #include "macros.dtsi"

        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <35 36 37 38 52 53 65 66 67 68 69 70 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1        &kp N2       &kp N3       &kp N4        &kp N5  &none                                                                     &mo MOD            &kp N6  &kp N7         &kp N8       &kp N9       &kp N0       &ht C_PWR C_PLAY_PAUSE
&kp TAB    &kp Q         &kp W        &kp F        &kp P         &kp B   &none                                                                     &none              &kp J   &kp L          &kp U        &kp Y        &kp SEMI     &kp BSLH
&kp ESC    &lhm LCTRL A  &lhm LALT R  &lhm LGUI S  &lhm LSHFT T  &kp G   &none            &kp LCTRL      &kp LALT      &kp LGUI   &kp RCTRL        &none              &kp M   &rhm RSHIFT N  &rhm RGUI E  &rhm RALT I  &rhm RALT O  &kp SQT
&kp LSHFT  &kp Z         &kp X        &kp C        &kp D         &kp V                                   &kp HOME      &kp PG_UP                                      &kp K   &kp H          &kp COMMA    &kp DOT      &kp FSLH     &kp RSHFT
&none      &kp GRAVE     &kp CAPS     &kp LEFT     &kp RIGHT             &mt HYPER SPACE  &kp BACKSPACE  &kp END       &kp PG_DN  &lt NUMBERS TAB  &lt SYMBOLS ENTER          &kp UP         &kp DOWN     &kp LBKT     &kp RBKT     &kp LA(SPACE)
            >;
        };

        symbols_layer {
            bindings = <
&trans  &trans       &trans     &trans    &trans    &trans  &trans                                      &trans  &trans     &trans     &trans     &trans     &trans    &trans
&trans  &trans       &kp POUND  &kp LBKT  &kp RBKT  &trans  &trans                                      &trans  &trans     &kp EXCL   &kp PLUS   &trans     &trans    &trans
&trans  &kp PERCENT  &kp DLLR   &kp LPAR  &kp RPAR  &trans  &none   &trans  &trans      &trans  &trans  &trans  &kp GRAVE  &kp EQUAL  &kp MINUS  &kp COLON  &kp SEMI  &kp DQT
&trans  &kp CARET    &kp AMPS   &kp LBRC  &kp RBRC  &trans                  &trans      &trans                  &trans     &kp UNDER  &kp LT     &kp GT     &trans    &trans
&trans  &trans       &trans     &trans    &trans            &trans  &trans  &trans      &trans  &trans  &trans             &trans     &trans     &trans     &trans    &kp LG(F5)
            >;
        };

        numbers_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &none   &trans  &trans      &trans  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                        &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                  &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none             &none       &none                  &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                                       &kp C_VOLUME_UP        &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &kp C_PLAY_PAUSE  &kp K_MUTE  &kp C_VOLUME_DOWN      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
